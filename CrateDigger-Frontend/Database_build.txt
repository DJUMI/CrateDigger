create database crate_digger;


use crate_digger;


create table Artist(artist_id bigint, artist_name varchar(255), primary key(artist_id));


create table Label(label_id bigint, label_name varchar(255), primary key(label_id));


create table Cart(user_id bigint, num_releases bigint, total_price double, primary key(user_id));


create table Listing(listing_id bigint, format varchar(255), price double, media_condition varchar(255), status varchar(255), release_id bigint, primary key(listing_id));


create table Album(release_id bigint, title varchar(255), released varchar(255), styles varchar(255), label_id bigint, artist_id bigint, primary key (release_id));


create table Contains (user_id bigint, listing_id bigint, primary key(user_id , listing_id ));




LOG OUT


Log in with tags: -u <your username> -p --local-infile crate_digger


SET GLOBAL local_infile = 1;


INPUT DATA EXAMPLE: 
load data local infile '/Users/Peter/Desktop/CS564/Project/Data/artist.csv' into table Artist CHARACTER SET latin1 fields terminated by ',' lines terminated by '\r\n';






























CART STUFF




Default empty cart for user:
insert into cart(user_id, num_releases, total_price) values(0001, 0, 0);


Build example cart for that user:
INSERT INTO contains (user_id, listing_id) VALUES (0001, 687968863);
INSERT INTO contains (user_id, listing_id) VALUES (0001, 799852266);
INSERT INTO contains (user_id, listing_id) VALUES (0001, 687968997);
INSERT INTO contains (user_id, listing_id) VALUES (0001, 783859342);
INSERT INTO contains (user_id, listing_id) VALUES (0001, 687968774);
INSERT INTO contains (user_id, listing_id) VALUES (0001, 687968777);
INSERT INTO contains (user_id, listing_id) VALUES (0001, 687969741)




Update cart with additions (run after each insert):


UPDATE Cart SET num_releases = (SELECT COUNT(*) FROM Contains), total_price = (SELECT SUM(l.price) FROM Contains c, Listing l WHERE l.listing_id = c.listing_id ORDER BY l.price) WHERE user_id = 1;